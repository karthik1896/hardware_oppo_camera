package com.oppo.camera.statistics.model;

import android.content.Context;
import android.text.TextUtils;
import com.oppo.camera.aps.constant.ApsConstant;
import java.util.regex.Pattern;

public class VideoRecordMsgData extends DcsMsgData {
    public static final String END_TYPE_MOMORY_LIMIT = "memory_limit";
    public static final String END_TYPE_NORMAL = "normal";
    public static final String END_TYPE_TEMP_LIMIT = "temp_limit";
    private static final String EVENT_VIDEO_RECORD = "videoRecord";
    private static final String KEY_AE_AF_LOCK = "ae_af_lock";
    private static final String KEY_AI_ENHANCE_CHANGE = "ai_enhance_change";
    private static final String KEY_AI_ENHANCE_END = "ai_enhance_end";
    private static final String KEY_AI_ENHANCE_START = "ai_enhance_start";
    private static final String KEY_AVAILABLE_STORAGE = "available_storage";
    private static final String KEY_CCT = "cct_value";
    private static final String KEY_END_TYPE = "end_type";
    private static final String KEY_EXP = "exp_value";
    private static final String KEY_FACE_COUNT = "face_count";
    private static final String KEY_FACE_COUNT_START = "face_count_start";
    private static final String KEY_FILE_PATH = "file_path";
    private static final String KEY_FLASH_MODE = "flash_mode";
    private static final String KEY_HIGH_BRIGHTNESS = "screen_highlight";
    private static final String KEY_HORIZONTAL_OR_VERTICAL = "horizontal_or_vertical";
    private static final String KEY_ISO = "iso_value";
    private static final String KEY_IS_AI_ENHANCE = "is_ai_enhance";
    private static final String KEY_IS_ASSISTANT_LINE = "is_assistant_line";
    private static final String KEY_IS_CUSTOM_SLOGAN = "is_custom_slogan";
    private static final String KEY_IS_LOCATION_SLOGAN = "is_location_slogan";
    private static final String KEY_IS_MODEL_SLOGAN = "is_model_slogan";
    private static final String KEY_IS_MOTION_FASTVIDEO = "is_motion_fastVideo";
    private static final String KEY_IS_NIGHT_SCENE = "is_night_scene";
    private static final String KEY_IS_OVERLAP = "is_overlap";
    private static final String KEY_IS_RECORD_LOCATION = "is_record_location";
    private static final String KEY_IS_SD_CARD = "is_sd";
    private static final String KEY_IS_SHUTTER_VOICE = "is_shutter_voice";
    private static final String KEY_IS_STABLIZED = "is_stablized";
    private static final String KEY_IS_TIME_SLOGAN = "is_time_slogan";
    private static final String KEY_IS_VIDEO_3HDR = "hdr_mode";
    private static final String KEY_IS_WIDE_ANGLE = "is_wide_angle";
    private static final String KEY_LOCATION = "location";
    private static final String KEY_LUX = "lux_value";
    private static final String KEY_MEMORY_VALUE = "memory_value";
    private static final String KEY_MOVIE_CAMERA_ID = "movie_camera_id";
    private static final String KEY_MOVIE_EV_VALUE = "movie_ev_value";
    private static final String KEY_MOVIE_EXP_TIME = "movie_exp_time";
    private static final String KEY_MOVIE_FOCUS_VALUE = "movie_focus_value";
    private static final String KEY_MOVIE_HISTOGRAM_MODE = "histogram_mode";
    private static final String KEY_MOVIE_ISO_VALUE = "movie_iso_value";
    private static final String KEY_MOVIE_LOG_MODE = "log_value";
    private static final String KEY_MOVIE_STEADY = "movie_steady";
    private static final String KEY_MOVIE_WB_VALUE = "movie_wb_value";
    private static final String KEY_ORIENTATION_START = "orientation_start";
    private static final String KEY_POSTERIZE_TIME = "posterize_time";
    private static final String KEY_PREVIEW_CAPTURE_COST_TIME = "preview_capture_cost_time";
    private static final String KEY_PROTOCOL_VERSION = "protocol_version";
    private static final String KEY_SCREEN_COMPOSE = "screen_compose";
    private static final String KEY_SCREEN_MODE = "screen_mode";
    private static final String KEY_SHUTTER_TYPE = "capture_type";
    private static final String KEY_SLOW_VIDEO_DRAG_BOX = "drag_box";
    private static final String KEY_SLOW_VIDEO_INTELLI_DETECT = "intelli_detect";
    private static final String KEY_SMOOTH_ZOOM = "smooth_zoom_value";
    private static final String KEY_SPIRIT_LEVEL = "spirit_level";
    private static final String KEY_STICKER_NAME = "sticker_name";
    private static final String KEY_STICKER_TYPE = "sticker_type";
    private static final String KEY_STICKER_UUID = "sticker_uuid";
    private static final String KEY_TOUCH_EXPOSURE_COMPENSATION = "touch_ev";
    private static final String KEY_TOUCH_XY = "touchxy_value";
    private static final String KEY_TOUCH_XY_HYPER_LPASE_VIEW = "hyper_lapse_focus_view";
    private static final String KEY_ULTRA_STEADY = "ultra_steady";
    private static final String KEY_VIDEO_ASSISTANT_LINE = "video_assistant_line";
    private static final String KEY_VIDEO_BLUR_START_FACE_COUNT = "face_count_start";
    private static final String KEY_VIDEO_BLUR_START_ORIENTATION = "orientation_start";
    private static final String KEY_VIDEO_CODEC = "video_codec";
    public static final String KEY_VIDEO_DB_EFFECT_VALUE_MIXED = "mixed";
    public static final String KEY_VIDEO_DB_EFFECT_VALUE_SILHOUETTE = "silhouette";
    private static final String KEY_VIDEO_DB_EXPO_EFFECT = "db_expo_effect";
    private static final String KEY_VIDEO_DEWIND_NOISE = "wnr_trigger";
    private static final String KEY_VIDEO_FACE_BEAUTY = "video_face_beauty";
    private static final String KEY_VIDEO_FPS = "video_fps";
    private static final String KEY_VIDEO_MODE = "video_mode";
    private static final String KEY_VIDEO_RECORDER_SOUND = "video_recorder_sound";
    private static final String KEY_VIDEO_SIZE_TYPE = "video_rec_mode";
    private static final String KEY_VIDEO_TIME = "video_time";
    private static final String KEY_VOLUME_FUNCTION = "volume_function";
    private static final String REGEX_FOCUS = "^0\\.\\d*[1-9]\\d*|0|1|auto$";
    private static final String REGEX_ISO = "^0|([1-9][0-9]*)|auto$";
    private static final String REGEX_WB = "^([2-8][0-9]00)|auto$";
    private static final String TAG = "VideoRecordMsgData";
    public String mAeAfLock = "";
    public int mAiEnhanceSceneChangeCount = 0;
    public int mAiEnhanceSceneEnd = 0;
    public int mAiEnhanceSceneStart = 0;
    public long mAvaliableStorage = 0;
    public String mCct = "";
    public String mDoubleExposureEffect = "";
    public String mEndType = "";
    public String mExp = "";
    public int mFaceCount = 0;
    public String mFilePath = "";
    public String mFlashMode = "";
    public String mHorizontalOrVertical = "";
    public String mIs3HDR = "";
    public String mIsAiEnhance = "";
    public String mIsAssistantLine = "";
    public String mIsCustomSlogan = "";
    public String mIsDragBox = "";
    public String mIsHistogramOpen = "";
    public String mIsIntelligentDetect = "";
    public String mIsLocationSlogan = "";
    public String mIsLog = "";
    public String mIsModelSlogan = "";
    public String mIsNightScene = "";
    public String mIsOverlap = "";
    public String mIsRecordLocation = "";
    public String mIsSDCard = "";
    public String mIsShutterVoice = "";
    public String mIsStablized = "";
    public String mIsTimeSlogan = "";
    public String mIsWideAngle = "";
    public String mIso = "";
    public String mLocation = "";
    public String mLux = "";
    public String mMemoryValue = "";
    public String mMotionFastVideo = "";
    public String mMovieCameraId = "";
    public String mMovieEvValue = "";
    public String mMovieExpTime = "";
    public String mMovieFocusValue = "";
    public String mMovieIsoValue = "";
    public String mMovieSteady = "";
    public String mMovieWbValue = "";
    public String mNoiseFilter = "";
    public String mPosterizeTime = "";
    public long mPreviewCaptureCostTime = 0;
    public String mProtocolVersion = "";
    public String mScreenCompose = "";
    public String mScreenMode = "";
    public String mShutterType = "";
    public String mSmoothZoom = "";
    public String mSpiritLevel = "";
    public int mStartVideoRecordingFaceCount = 0;
    public int mStartVideoRecordingOrientation = 0;
    public String mStickerName = "";
    public String mStickerType = "";
    public String mStickerUuid = "";
    public String mSubScreenValue = "";
    public int mTouchEVValue = 0;
    public String mTouchXYMotionFastVideo = "";
    public String mTouchXYValue = "";
    public String mUltraSteady = "";
    public String mVideoAssistantLine = "";
    public String mVideoCodec = "";
    public int mVideoFaceBeauty = 0;
    public String mVideoFps = "";
    public String mVideoMode = "";
    public String mVideoRecorderSound = "";
    public String mVideoSizeType = "";
    public long mVideoTime = 0;
    public String mVolumeFunction = "";

    public VideoRecordMsgData(Context context) {
        super(context, "202", "videoRecord", false);
    }

    public void report() {
        if (!TextUtils.isEmpty(this.mCaptureMode) && ApsConstant.CAPTURE_MODE_STICKER.equals(this.mCaptureMode)) {
            this.mCaptureType = 2;
        }
        prepareLogTagByCaptureType();
        checkEmptyCondition("ae_af_lock", String.valueOf(this.mAeAfLock));
        checkGreatCondition("available_storage", this.mAvaliableStorage, -1);
        checkNoAnyCondition("face_count", String.valueOf(this.mFaceCount));
        checkNoAnyCondition("face_count_start", String.valueOf(this.mStartVideoRecordingFaceCount));
        checkEmptyCondition(KEY_FILE_PATH, this.mFilePath);
        checkEmptyCondition(KEY_FLASH_MODE, this.mFlashMode);
        checkEmptyCondition(KEY_IS_CUSTOM_SLOGAN, this.mIsCustomSlogan);
        checkEmptyCondition(KEY_IS_LOCATION_SLOGAN, this.mIsLocationSlogan);
        checkEmptyCondition(KEY_IS_MODEL_SLOGAN, this.mIsModelSlogan);
        checkEmptyCondition(KEY_IS_RECORD_LOCATION, this.mIsRecordLocation);
        checkEmptyCondition(KEY_IS_SHUTTER_VOICE, this.mIsShutterVoice);
        checkEmptyCondition(KEY_IS_STABLIZED, this.mIsStablized);
        checkEmptyCondition(KEY_IS_TIME_SLOGAN, this.mIsTimeSlogan);
        checkEmptyCondition("location", this.mLocation);
        checkEmptyCondition(KEY_IS_WIDE_ANGLE, this.mIsWideAngle);
        checkEmptyCondition(KEY_MEMORY_VALUE, this.mMemoryValue);
        checkEmptyCondition("orientation_start", String.valueOf(this.mStartVideoRecordingOrientation));
        checkGreatCondition("preview_capture_cost_time", this.mPreviewCaptureCostTime, -1);
        checkEmptyCondition(KEY_PROTOCOL_VERSION, this.mProtocolVersion);
        checkEmptyCondition("capture_type", this.mShutterType);
        checkEmptyCondition("sticker_name", this.mStickerName);
        checkEmptyCondition("sticker_type", this.mStickerType);
        checkEmptyCondition("sticker_uuid", this.mStickerUuid);
        checkEmptyCondition(KEY_TOUCH_XY, this.mTouchXYValue);
        checkNoAnyCondition("touch_ev", String.valueOf(this.mTouchEVValue));
        checkEmptyCondition(KEY_ULTRA_STEADY, this.mUltraSteady);
        checkEmptyCondition("video_codec", this.mVideoCodec);
        checkEmptyCondition(KEY_VIDEO_DEWIND_NOISE, this.mNoiseFilter);
        checkEmptyCondition("video_fps", this.mVideoFps);
        checkEmptyCondition("video_mode", this.mVideoMode);
        checkEmptyCondition("video_rec_mode", this.mVideoSizeType);
        checkGreatCondition("video_time", this.mVideoTime, 0);
        checkEmptyCondition("video_recorder_sound", this.mVideoRecorderSound);
        checkEmptyCondition("volume_function", this.mVolumeFunction);
        checkEmptyCondition(KEY_IS_VIDEO_3HDR, this.mIs3HDR);
        checkEmptyCondition(KEY_IS_NIGHT_SCENE, this.mIsNightScene);
        checkEmptyCondition(KEY_IS_AI_ENHANCE, this.mIsAiEnhance);
        checkNoAnyCondition(KEY_LUX, this.mLux);
        checkEmptyCondition(KEY_END_TYPE, this.mEndType);
        checkEmptyCondition(KEY_IS_MOTION_FASTVIDEO, this.mMotionFastVideo);
        checkEmptyCondition(KEY_POSTERIZE_TIME, this.mPosterizeTime);
        checkEmptyCondition(KEY_TOUCH_XY_HYPER_LPASE_VIEW, this.mTouchXYMotionFastVideo);
        checkEmptyCondition(KEY_CCT, this.mCct);
        checkEmptyCondition(KEY_EXP, this.mExp);
        checkEmptyCondition(KEY_ISO, this.mIso);
        checkEmptyCondition(KEY_SMOOTH_ZOOM, this.mSmoothZoom);
        checkEmptyCondition(KEY_SPIRIT_LEVEL, this.mSpiritLevel);
        checkEmptyCondition(KEY_VIDEO_ASSISTANT_LINE, this.mVideoAssistantLine);
        checkEmptyCondition(KEY_HORIZONTAL_OR_VERTICAL, this.mHorizontalOrVertical);
        checkEmptyCondition(KEY_IS_OVERLAP, this.mIsOverlap);
        checkEmptyCondition("subscreen_value", this.mSubScreenValue);
        checkEmptyCondition(KEY_SCREEN_COMPOSE, this.mScreenCompose);
        checkEmptyCondition(KEY_SCREEN_MODE, this.mScreenMode);
        checkEmptyCondition(KEY_IS_SD_CARD, this.mIsSDCard);
        checkEmptyCondition(KEY_SLOW_VIDEO_INTELLI_DETECT, this.mIsIntelligentDetect);
        checkEmptyCondition(KEY_SLOW_VIDEO_DRAG_BOX, this.mIsDragBox);
        checkEmptyCondition(KEY_MOVIE_CAMERA_ID, this.mMovieCameraId);
        checkEmptyCondition(KEY_IS_ASSISTANT_LINE, this.mIsAssistantLine);
        checkEmptyCondition(KEY_MOVIE_EXP_TIME, this.mMovieExpTime);
        checkEmptyCondition(KEY_MOVIE_EV_VALUE, this.mMovieEvValue);
        checkEmptyCondition("video_mode", this.mVideoMode);
        checkEmptyCondition(KEY_MOVIE_STEADY, this.mMovieSteady);
        checkEmptyCondition(KEY_MOVIE_HISTOGRAM_MODE, this.mIsHistogramOpen);
        checkEmptyCondition(KEY_MOVIE_LOG_MODE, this.mIsLog);
        checkGreatCondition(KEY_AI_ENHANCE_START, this.mAiEnhanceSceneStart, 0);
        checkGreatCondition(KEY_AI_ENHANCE_END, this.mAiEnhanceSceneEnd, 0);
        checkGreatCondition(KEY_AI_ENHANCE_CHANGE, this.mAiEnhanceSceneChangeCount, 0);
        checkEmptyCondition("db_expo_effect", this.mDoubleExposureEffect);
        if (Pattern.matches(REGEX_ISO, this.mMovieIsoValue)) {
            checkEmptyCondition(KEY_MOVIE_ISO_VALUE, this.mMovieIsoValue);
        }
        if (Pattern.matches(REGEX_FOCUS, this.mMovieFocusValue)) {
            checkEmptyCondition(KEY_MOVIE_FOCUS_VALUE, this.mMovieFocusValue);
        }
        if (Pattern.matches(REGEX_WB, this.mMovieWbValue)) {
            checkEmptyCondition(KEY_MOVIE_WB_VALUE, this.mMovieWbValue);
        }
        if (ApsConstant.REC_MODE_COMMON.equals(this.mVideoMode) || ApsConstant.CAPTURE_MODE_STICKER.equals(this.mVideoMode)) {
            checkNoAnyCondition("orientation_start", String.valueOf(this.mStartVideoRecordingOrientation));
            checkNoAnyCondition("face_count_start", String.valueOf(this.mStartVideoRecordingFaceCount));
        }
        if (this.mSmooth == 102) {
            checkGreatCondition("video_face_beauty", this.mSmoothDermabrasion, -1);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_FACE_LEAN, this.mSmoothFaceLean, -1);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_EYE_BIG, this.mSmoothEyeBig, -1);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_NOSE_LEAN, this.mSmoothNoseLean, -1);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_FACE_JAW, this.mSmoothFaceJaw, -51);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_FACE_SMALL, this.mSmoothFaceSmall, -1);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_FRESHEN_UP, this.mSmoothFreshenUp, -1);
            checkGreatCondition(DcsMsgData.KEY_SMOOTH_CUBE, this.mSmoothCube, -1);
        }
        super.report();
    }
}
